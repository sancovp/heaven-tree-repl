"""
My Domain Treeshell - TreeShell Library

Generated by Recursive TreeShell Factory
Built on: heaven_tree_repl
"""

__version__ = "1.0.0"

# Import all generated classes
#!/usr/bin/env python3
# Auto-generated by Recursive TreeShell Factory

import os
from pathlib import Path
from heaven_tree_repl import AgentTreeShell, FullstackTreeShell, TreeShell, UserTreeShell
from heaven_tree_repl import SystemConfigLoader

class MyDomainTreeshellConfigLoader(SystemConfigLoader):
    """Custom config loader that uses this library's system configs as base."""
    
    def _get_library_configs_dir(self) -> str:
        """Override to use this library's configs instead of parent's."""
        # Point to this library's config directory
        library_root = Path(__file__).parent.parent
        return str(library_root / "configs")

class MyDomainTreeshellAgentTreeShell(AgentTreeShell):
    """Enhanced AgentTreeShell with MyDomainTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, session_id: str = None, approval_callback=None):
        config_loader = MyDomainTreeshellConfigLoader(config_types=["base", "agent"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, session_id, approval_callback)


class MyDomainTreeshellFullstackTreeShell(FullstackTreeShell):
    """Enhanced FullstackTreeShell with MyDomainTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, parent_approval_callback=None):
        config_loader = MyDomainTreeshellConfigLoader(config_types=["base", "agent", "user"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, parent_approval_callback)


class MyDomainTreeshellTreeShell(TreeShell):
    """Enhanced TreeShell with MyDomainTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None):
        config_loader = MyDomainTreeshellConfigLoader(config_types=["base"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config)


class MyDomainTreeshellUserTreeShell(UserTreeShell):
    """Enhanced UserTreeShell with MyDomainTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, parent_approval_callback=None):
        config_loader = MyDomainTreeshellConfigLoader(config_types=["base", "user"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, parent_approval_callback)


# Export everything for public API and next-generation inheritance
__all__ = [
    "MyDomainTreeshellConfigLoader",
    "MyDomainTreeshellAgentTreeShell",
    "MyDomainTreeshellFullstackTreeShell",
    "MyDomainTreeshellTreeShell",
    "MyDomainTreeshellUserTreeShell",
]