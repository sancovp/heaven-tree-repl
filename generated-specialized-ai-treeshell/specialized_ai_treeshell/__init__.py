"""
Specialized Ai Treeshell - TreeShell Library

Generated by Recursive TreeShell Factory
Built on: my_domain_treeshell
"""

__version__ = "1.0.0"

# Import all generated classes
#!/usr/bin/env python3
# Auto-generated by Recursive TreeShell Factory

import os
from pathlib import Path
from my_domain_treeshell import AgentTreeShell, FullstackTreeShell, MyDomainTreeshellAgentTreeShell, MyDomainTreeshellFullstackTreeShell, MyDomainTreeshellTreeShell, MyDomainTreeshellUserTreeShell, TreeShell, UserTreeShell
from heaven_tree_repl.system_config_loader_v2 import SystemConfigLoader

class SpecializedAiTreeshellConfigLoader(SystemConfigLoader):
    """Custom config loader that uses this library's system configs as base."""
    
    def _get_library_configs_dir(self) -> str:
        """Override to use this library's configs instead of parent's."""
        # Point to this library's config directory
        library_root = Path(__file__).parent.parent
        return str(library_root / "configs")

class SpecializedAiTreeshellAgentTreeShell(AgentTreeShell):
    """Enhanced AgentTreeShell with SpecializedAiTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, session_id: str = None, approval_callback=None):
        config_loader = SpecializedAiTreeshellConfigLoader(config_types=["base", "agent"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, session_id, approval_callback)


class SpecializedAiTreeshellFullstackTreeShell(FullstackTreeShell):
    """Enhanced FullstackTreeShell with SpecializedAiTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, parent_approval_callback=None):
        config_loader = SpecializedAiTreeshellConfigLoader(config_types=["base", "agent", "user"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, parent_approval_callback)


class SpecializedAiTreeshellMyDomainTreeshellAgentTreeShell(MyDomainTreeshellAgentTreeShell):
    """Enhanced MyDomainTreeshellAgentTreeShell with SpecializedAiTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, session_id: str = None, approval_callback=None):
        config_loader = SpecializedAiTreeshellConfigLoader(config_types=["base", "agent"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, session_id, approval_callback)


class SpecializedAiTreeshellMyDomainTreeshellFullstackTreeShell(MyDomainTreeshellFullstackTreeShell):
    """Enhanced MyDomainTreeshellFullstackTreeShell with SpecializedAiTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, parent_approval_callback=None):
        config_loader = SpecializedAiTreeshellConfigLoader(config_types=["base", "agent", "user"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, parent_approval_callback)


class SpecializedAiTreeshellMyDomainTreeshellTreeShell(MyDomainTreeshellTreeShell):
    """Enhanced MyDomainTreeshellTreeShell with SpecializedAiTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None):
        config_loader = SpecializedAiTreeshellConfigLoader(config_types=["base"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config)


class SpecializedAiTreeshellMyDomainTreeshellUserTreeShell(MyDomainTreeshellUserTreeShell):
    """Enhanced MyDomainTreeshellUserTreeShell with SpecializedAiTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, parent_approval_callback=None):
        config_loader = SpecializedAiTreeshellConfigLoader(config_types=["base", "user"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, parent_approval_callback)


class SpecializedAiTreeshellTreeShell(TreeShell):
    """Enhanced TreeShell with SpecializedAiTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None):
        config_loader = SpecializedAiTreeshellConfigLoader(config_types=["base"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config)


class SpecializedAiTreeshellUserTreeShell(UserTreeShell):
    """Enhanced UserTreeShell with SpecializedAiTreeshell customizations baked in."""
    def __init__(self, user_config_path: str = None, parent_approval_callback=None):
        config_loader = SpecializedAiTreeshellConfigLoader(config_types=["base", "user"])
        final_config = config_loader.load_configs(user_config_path)
        super().__init__(final_config, parent_approval_callback)


# Export everything for public API and next-generation inheritance
__all__ = [
    "SpecializedAiTreeshellConfigLoader",
    "SpecializedAiTreeshellAgentTreeShell",
    "SpecializedAiTreeshellFullstackTreeShell",
    "SpecializedAiTreeshellMyDomainTreeshellAgentTreeShell",
    "SpecializedAiTreeshellMyDomainTreeshellFullstackTreeShell",
    "SpecializedAiTreeshellMyDomainTreeshellTreeShell",
    "SpecializedAiTreeshellMyDomainTreeshellUserTreeShell",
    "SpecializedAiTreeshellTreeShell",
    "SpecializedAiTreeshellUserTreeShell",
]